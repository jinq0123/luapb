-- premake5.lua
--[[
Usage examples: 
	for windows: premake5.exe --os=windows vs2015
	fot linux:   premake5.exe --os=linux gmake
]]

-- Change these:
protobuf_include_dir = "E:/Git/protobuf/src"
protobuf_lib_dir_debug = "E:/Git/protobuf/cmake/build/solution/Debug"
protobuf_lib_dir_release = "E:/Git/protobuf/cmake/build/solution/Release"
lua_include_dir = "E:/gianttech/server_deps_oschina/include/lua532"
lua_lib_dir_debug = "E:/gianttech/server_deps_lib_win/Debug"
lua_lib_dir_release = "E:/gianttech/server_deps_lib_win/Release"
lua_lib_name = "lua532"
-- Set true if lua is complied in cxx.
lua_complied_in_cxx = false

-- Todo: support non-vs2015, x64

workspace "luapb"
	configurations { "Debug", "Release" }
project "luapb"
	kind "SharedLib"
	language "C++"
	flags {
		"StaticRuntime",  -- for protobuf
	}
	if lua_complied_in_cxx then
		defines { "LUAPB_LINK_LUA_COMPILED_IN_CXX=1" }
	end  -- if
	files {
		"../include/*.h",
		"../src/*.h",
		"../src/*.cc",
	}
	includedirs {
		"../include",
		protobuf_include_dir,
		lua_include_dir,
	}
	links { lua_lib_name }

	filter "configurations:Debug"
		flags { "Symbols" }
		libdirs {
			protobuf_lib_dir_debug,
			lua_lib_dir_debug,
		}
		links { "libprotobufd" }
	filter "configurations:Release"
		defines { "NDEBUG" }
		optimize "On"
		libdirs {
			protobuf_lib_dir_release,
			lua_lib_dir_release,
		}
		links { "libprotobuf" }
-- End of project "luapb"
